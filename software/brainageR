#!/bin/bash

## brainageR software, global wrapper script
## James Cole, University College London james.cole@ucl.ac.uk
## software version 2.1 Oct 2020
## Updated by Mia Anthony, Sept 2023: changed sh to bash and commented out folder paths (set in config file)

usage() {
    cat <<EOF

brainageR software version 2.1 Oct 2020

Required arguments:
	-f: input Nifti file
	-o: output csv filename

Optional arguments:
	-d: debug mode - turns off clean-up
	-h: displays this help message

For example:
brainageR -f subj01_T1.nii -o subj01_brain_predicted.age.csv

Dependencies:
R packages: kernlab, RNifti, stringr
SPM (MATLAB)
FSL (for slicesdir)

EOF
    exit 1
}

############################################################################

while getopts ":f:o:dh:" opt; do
    case "${opt}" in
        f)  	input_file=${OPTARG} ;;
        o)	output_filename=${OPTARG} ;;
        d)	debug_mode=1 ;;
        h|*)    usage ;;
    esac
done

shift $((OPTIND-1))

if [ -z "${input_file}" ] || [ -z "${output_filename}" ]; then
    usage
fi

# return absolute path after resolving symbolic links
#if [[ "$OSTYPE" == "darwin"* ]]; then
	#full_path_file=`greadlink -f $input_file`
#else
	#full_path_file=`readlink -f $input_file`
#fi

full_path_file=$(realpath $input_file)

file_name=$(basename -s .nii $input_file)
full_path=$(echo $input_file | sed -e "s@${file_name}.nii@@")
#file_name=`basename -s .nii $full_path_file`
#full_path=`echo $full_path_file | sed -e "s@${file_name}.nii@@"`
echo $full_path

## check files are uncompressed NIFTI fortmat
if [[ $full_path_file != *.nii ]]; then usage; fi
## check software environment and attempt to load using module
## CONFIGURE FOR YOUR LOCAL SYSTEM
#for software in R matlab fsl; do
#	software_check=`type $software | grep -o bin`
#	if [ ! $software_check == "bin" ]; then module load $software; fi
#	software_check2=`type $software | grep -o bin`
#	if [ ! $software_check2 == "bin" ]; then echo $software not found; exit 1; fi
#done

## set software directories for your local system
brainageR_dir=/scratch/tbaran2_lab/brainageR
spm_dir=/software/spm/12
matlab_path=/software/matlab/r2022a
FSLDIR=/software/fsl/6.0.5.1

## run brainageR analysis
### SPM12 segmentation and normalisation
cmd="matlab -nosplash -nodesktop -r \"addpath(['$brainageR_dir','/software/']);spm_preprocess_brainageR('$full_path_file',['$brainageR_dir','/software/templates/'], '$spm_dir')\""
eval ${cmd}

### check that the pre-processing has completed
if [ ! -f "${full_path}/smwc1${file_name}.nii" ]; then
	echo "Processed grey matter file not found: SPM12 pre-processing probably failed"
	exit 1
fi

echo ${full_path}/smwc1${file_name}.nii > /tmp/smwc1${file_name}.txt

echo ${full_path}/smwc2${file_name}.nii > /tmp/smwc2${file_name}.txt

echo ${full_path}/smwc3${file_name}.nii > /tmp/smwc3${file_name}.txt

### generate QC images and html file
"$brainageR_dir"/software/slicesdir.brainageR -n ${full_path}/${file_name}.nii ${full_path}/[c,s]*[1,2,3]*${file_name}.nii

### generate predictions
Rscript "$brainageR_dir"/software/predict_new_data_gm_wm_csf.R "${brainageR_dir}" /tmp/smwc1${file_name}.txt /tmp/smwc2${file_name}.txt /tmp/smwc3${file_name}.txt "${brainageR_dir}"/software/GPR_model_gm_wm_csf.RData $output_filename

### clean up
if [ -z $debug_mode ]; then
	if [ -f "${full_path}/c1${file_name}.nii" ]; then
		for img in c1 c2 c3 rc1 rc2 rc3 u_rc1 smwc1 smwc2 smwc3; do
			rm ${full_path}/${img}${file_name}.nii
		done
	fi
	rm ${full_path}/${file_name}*seg8.mat
fi
